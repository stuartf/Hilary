var Cassandra = require('oae-util/lib/cassandra');

var getD2LUser = module.exports.getD2LUser = function(userId, callback) {
    Cassandra.runQuery('SELECT d2lUserId, d2lUserKey FROM D2LUsers USING CONSISTENCY QUORUM WHERE userId = ?', [userId], function(err, rows) {
        if (err) {
            return callback(err);
        }

        return callback(null, Cassandra.rowToHash(rows[0]));
    });
};

var saveD2LUser = module.exports.saveD2LUser = function(userId, d2lUserId, d2lUserKey, callback) {
    var d2lUser = {'d2lUserId': d2lUserId, 'd2lUserKey': d2lUserKey};
    var q = Cassandra.constructUpsertCQL('D2LUsers', 'userId', userId, d2lUser, 'QUORUM');
    return Cassandra.runQuery(q.query, q.parameters, callback);
};

var getD2LSubmissions = module.exports.getD2LSubmissions = function(contentId, userId, callback) {
    Cassandra.runQuery('SELECT * FROM D2LSubmissions USING CONSISTENCY QUORUM WHERE contentId_userId = ?', [contentId + '#' + userId], function(err, rows) {
        if (err) {
            return callback(err);
        }

        return callback(null, Cassandra.rowToHash(rows[0]));
    });
};

var saveD2LSubmissions = module.exports.saveD2LSubmissions = function(contentId, userId, d2lContent, callback) {
    var q = Cassandra.constructUpsertCQL('D2LSubmissions', 'contentId_userId', contentId + '#' + userId, d2lContent, 'QUORUM');
    return Cassandra.runQuery(q.query, q.parameters, callback);
};
