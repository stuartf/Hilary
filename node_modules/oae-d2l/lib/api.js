/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');

var D2LConfig = require('oae-config').config('oae-d2l');
var log = require('oae-logger').logger('oae-d2l');

var D2L = require('valence');

/**
 *
 * @param  {Object}     config           JSON object containing configuration values
 * @param  {Function}   callback         Standard callback function
 */
var initialize = module.exports.initialize = function(config, callback) {
    callback();
};

var _getConfig = function(tenantAlias) {
    var config = {
        'admins': [],
        'students': [],
        'instructors': []
    };
    var _getConfigVal = function(key) {
        return D2LConfig.getValue(tenantAlias, 'd2l', key);
    };
    var url = _getConfigVal('url');
    var appId = _getConfigVal('appId');
    var appKey = _getConfigVal('appKey');
    config.appContext = new D2L.ApplicationContext(url, appId, appKey);
    for (var i=1; i<=5; i++) {
        config.admins.push({
            'oae': _getConfigVal('admin' + i + 'oae'),
            'd2l': _getConfigVal('admin' + i + 'd2l')
        });
        config.students.push({
            'oae': _getCofigVal('student' + i + 'oae'),
            'd2l': _getConfigVal('student' + i + 'd2l')
        });
        config.instructors.push({
            'oae': _getConfigVal('instructor' + i + 'oae'),
            'd2l': _getConfigVal('instructor' + i + 'd2l')
        });
    }
    return config;
};
