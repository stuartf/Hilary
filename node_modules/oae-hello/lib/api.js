var _ = require('underscore');

var HelloDAO = require('./internal/dao');
var HelloConstants = require('./constants');

/**
 * Get the current user's favorite color
 *
 * @param  {Context}  ctx             Standard context object
 * @param  {Function} callback        Callback function to be called on completion
 * @param  {Error}    callback.err    An error if one occurred
 * @param  {Object}   callback.color  An object of the form {colorId: 'black', hex: '000000'} representing the user's favorite color
 */
var getFavorite = module.exports.getFavorite = function(ctx, callback) {
    if (!ctx.user()) {
        return callback({'code': 401, 'msg': 'You must be logged in to get a favorite'});
    }

    HelloDAO.getFavorite(ctx.user().id, function(err, color) {
        if (err) {
            return callback(err);
        }

        return callback(null, color);
    });
};

/**
 * Set the user's favorite color
 *
 * @param  {Context}  ctx             Standard context object
 * @param  {Object}   color           An object of the form {colorId: 'black', hex: '000000'} to be used as the user's favorite color
 * @param  {Function} callback        Callback function to be called on completion
 * @param  {Error}    callback.err    An error if one occurred
 */
var setFavorite = module.exports.setFavorite = function(ctx, color, callback) {
    if (!ctx.user()) {
        return callback({'code': 400, 'msg': 'Only authenticated users can set a favorite'});
    }
    HelloDAO.saveFavorite(ctx.user().id, color, function(err) {
        debugger;
        if (err) {
            return callback(err);
        }

        return callback();
    });
};

/**
 * Gets a color object given the colorId
 *
 * @param  {String}  colorId         The id of a color in oae-hello/constants
 * @return {Object}                  An object of the form {colorId: 'black', hex: '000000'}
 */
var getColorById = module.exports.getColorById = function(colorId) {
    var foundColor = _.find(HelloConstants.colors, function(color) { return color.colorId === colorId; });
    return foundColor;
};
